# 克隆
git clone [url]
==========================
# 克隆等同的操作手段
#将一个空文件夹初始化为git文件夹
git init
# 添加远程仓库
git remote add [仓库名] [仓库的url]
# 可以查看远程仓库 （-v 远程的仓库）
git remote -v
# 拉取远程仓库相关的最新文件
git pull [前面添加的远程仓库名字] [对应的仓库的分支名]
# 查看相关的分支
git branch
# 查看远程仓库的分支 
git branch -r

==========================
# 加入暂存区
git add [filename]
# 查看当前的git的状态
git status
# 查看git的提交的相关的日志
git log --pretty =oneline
# 删除对应的文件（这样执行直接回在暂存区添加修改）
git rm  [filename]
# 重命名对应的文件（这样执行直接回在暂存区添加修改）
git mv  [filename] [filename]
# 将提交的暂存区域的文件 换还原为未暂存
git reset HEAD [filename]
# 将对应的提交提交在本地库中 
git commit 
git commit -m "注释内容"
如果是非新加的文件（就是受到git控制的文件）这边直接加上-a 就可以直接省略 git add
git commit -a -m "comments"
可以实现这次提的注释修改为上次提交的提交的注释
git commit --amend
# 将本地提交提交到远程库中
git push -u origin master
#这边是将修改的文件（还没进入暂存区域的文件即无状态的时候）放弃所有的修改的（慎用）
git checkout -- [filename]
